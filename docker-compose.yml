version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tempmail-postgres
    environment:
      POSTGRES_DB: tempmail_db
      POSTGRES_USER: tempmail_user
      POSTGRES_PASSWORD: tempmail_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tempmail_user -d tempmail_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # TempMail Server (uncomment when ready to use)
  # tempmail-server:
  #   build: .
  #   container_name: tempmail-server
  #   ports:
  #     - "3000:3000"
  #     - "25000:25000"
  #   environment:
  #     - NODE_ENV=development
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_NAME=tempmail_db
  #     - DB_USER=tempmail_user
  #     - DB_PASSWORD=tempmail_password
  #     - EMAIL_DOMAIN=localhost
  #     - SMTP_PORT=25000
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./src:/app/src
  #     - ./logs:/app/logs
  #     - ./stats:/app/stats
  #   restart: unless-stopped

  # Redis (optional, for advanced rate limiting)
  # redis:
  #   image: redis:7-alpine
  #   container_name: tempmail-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Adminer (Database management tool)
  adminer:
    image: adminer:latest
    container_name: tempmail-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  # redis_data:

networks:
  default:
    name: tempmail-network 